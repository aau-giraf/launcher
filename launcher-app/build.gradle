// Log timings per task.
class TimingsListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private timings = []

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        timings.add([ms, task.path])
        task.project.logger.warn "${task.path} took ${ms}ms"
    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task timings:"
        for (timing in timings) {
            if (timing[0] >= 50) {
                printf "%7sms  %s\n", timing
            }
        }
    }

    @Override
    void buildStarted(Gradle gradle) {}

    @Override
    void projectsEvaluated(Gradle gradle) {}

    @Override
    void projectsLoaded(Gradle gradle) {}

    @Override
    void settingsEvaluated(Settings settings) {}
}

gradle.addListener new TimingsListener()

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://cs-cust06-int.cs.aau.dk/artifactory/libraries'
        }
        mavenLocal()
    }
    dependencies {
        classpath 'dk.aau.cs.giraf:auto-deploy-gradle-plugin:1.5.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.0.2'
    }
}

// Always download latest snapshot
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'android'
apply plugin: 'dk.giraf.deploy'
apply plugin: 'play'

repositories {
    maven {
        url 'http://cs-cust06-int.cs.aau.dk/artifactory/libraries'
    }
    mavenLocal()
}

android {
    compileSdkVersion 19
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        unsigned {
            storePassword = ""
            keyAlias = ""
            keyPassword = ""
        }
    }

    buildTypes {
        unsignedBuild {
            debuggable false
            versionNameSuffix '-unsigned'
            signingConfig signingConfigs.unsigned
        }
        debug {
            testCoverageEnabled true
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

allprojects {
    repositories
    {
        mavenCentral()
    }

}
dependencies {
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    compile ('com.android.support:support-v4:+')
    compile ('fr.avianey.com.viewpagerindicator:library:2.4.1') {
        exclude module:'support-v4'
    }
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':barcodescanner')
    compile(group: 'dk.aau.cs.giraf', name: 'girafComponent', version: '1.3-SNAPSHOT', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'oasisLib', version: '1.1-SNAPSHOT', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'localDb', version: '0.0-SNAPSHOT', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'meta-database', version: '1.2')
    compile files('libs/libGoogleAnalyticsServices.jar')

}

play {
    serviceAccountEmail = project.playAcc.accountEmail
    pk12File = file(project.playAcc.keyPath)
    track = 'alpha'
}
