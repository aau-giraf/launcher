// Build system script
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
    }
}

// Always download latest snapshot
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'android'

/**************************************
 * Shared script to setup Artifactory *
 **************************************/
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3"
    }
}
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

group = "dk.aau.cs.giraf"
version = System.properties.VERSION ?: "1.0-SNAPSHOT" // Get version from the jenkins parameter VERSION
println "Version is ${version}"

repositories {
    jcenter()
    maven {
        url 'http://jenkins.giraf.cs.aau.dk:8080/artifactory/libs-release'
    }
    mavenLocal()

    flatDir {
        dirs 'libs'
    }
}

artifactory {
    contextUrl = artifactory_contextUrl
    publish {
        repository {
            username = artifactory_user
            password = artifactory_password
            repoKey = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
        }
        defaults {
            publications('artifacts')
            publishArtifacts = true
        }
    }
    resolve {
        repository {
            repoKey = 'jcenter'
        }
        repository {
            repoKey = 'libs-release'
            maven = true
        }
    }
}
/************************
 * End of shared script *
 ************************/

publishing {
    publications {
        artifacts(MavenPublication) {
            artifact "$buildDir/outputs/aar/launcher-release.aar"
        }
    }
}

dependencies {
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    compile('com.android.support:support-v4:23.1.1')
    compile('fr.avianey.com.viewpagerindicator:library:2.4.1') {
        exclude module: 'support-v4'
    }
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':barcodescanner')
    compile(group: 'dk.aau.cs.giraf', name: 'girafComponent', version: '10.8.3', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'oasisLib', version: '9.4.0', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'localDb', version: '5.1.5', ext: 'aar')
    compile(group: 'dk.aau.cs.giraf', name: 'meta-database', version: '3.5.0')
    compile(group: 'dk.aau.cs.giraf', name: 'ShowcaseView', version: '1.0.0')
    compile files('libs/libGoogleAnalyticsServices.jar')

}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        unsigned {
            storePassword = ""
            keyAlias = ""
            keyPassword = ""
        }
    }

    buildTypes {
        unsignedBuild {
            debuggable false
            versionNameSuffix '-unsigned'
            signingConfig signingConfigs.unsigned
            minifyEnabled true

            buildConfigField "boolean", "USE_TEST_SERVER", "true"
            buildConfigField "boolean", "ENABLE_SYMMETRICDS", "false"
            buildConfigField "boolean", "USE_PRODUCTION_SERVER", "false"
        }
        debug {
            testCoverageEnabled true

            buildConfigField "boolean", "USE_TEST_SERVER", "true"
            buildConfigField "boolean", "ENABLE_SYMMETRICDS", "false" //Write true here to enable syncronization.
            buildConfigField "boolean", "USE_PRODUCTION_SERVER", "false"
        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "USE_TEST_SERVER", "true"
            buildConfigField "boolean", "ENABLE_SYMMETRICDS", "false"
            buildConfigField "boolean", "USE_PRODUCTION_SERVER", "false" //Production server isn't created yet.
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

allprojects {
    repositories
            {
                mavenCentral()
                jcenter()
            }

}

/*play {
    serviceAccountEmail = project.playAcc.accountEmail
    pk12File = file(project.playAcc.keyPath)
    track = 'alpha'
}*/
